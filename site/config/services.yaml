# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    logout_handler:
        autowire: true
        class: Tensor\UserBundle\Handler\LogoutSuccessHandler 
    access_denied_handler:
        autowire: true
        class: Tensor\UserBundle\Handler\AccessDeniedHandler 
    # redirect_listener:
    #    class: Tensor\UserBundle\Listener\RedirectListener
    #    arguments: ['@security.token_storage']
    #    tags:
    #        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    exeption_listener:
        class: Tensor\UserBundle\Listener\ExeptionListener
        arguments: ['@security.token_storage']
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    api_functions:
        public: true
        class: Tensor\CoreBundle\Functions\ApiFunctions
        arguments: ['@doctrine.orm.entity_manager', '@service_container']


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #Tensor\:
    #    resource: '../src/Tensor/*'
    #    exclude: '../src/Tensor/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    #Tensor\Controller\:
    #    resource: '../src/Tensor/Controller'
    #    tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
